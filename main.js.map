{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/csv-read/csv-read.component.css","webpack:///./src/app/csv-read/csv-read.component.html","webpack:///./src/app/csv-read/csv-read.component.ts","webpack:///./src/app/department/department.component.css","webpack:///./src/app/department/department.component.html","webpack:///./src/app/department/department.component.ts","webpack:///./src/app/employee-list/employee-list.component.css","webpack:///./src/app/employee-list/employee-list.component.html","webpack:///./src/app/employee-list/employee-list.component.ts","webpack:///./src/app/employee.service.ts","webpack:///./src/app/hearder/hearder.component.css","webpack:///./src/app/hearder/hearder.component.html","webpack:///./src/app/hearder/hearder.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navigationData.service.ts","webpack:///./src/app/navtest/navtest.component.css","webpack:///./src/app/navtest/navtest.component.html","webpack:///./src/app/navtest/navtest.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/person.service.ts","webpack:///./src/app/room/room.component.css","webpack:///./src/app/room/room.component.html","webpack:///./src/app/room/room.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-hearder></app-hearder>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; //ReactiveFormsModule for reactive form validations\nimport {HttpClientModule} from '@angular/common/http' // for http\n\nimport { AppComponent } from './app.component';\nimport { HearderComponent } from './hearder/hearder.component';\nimport { HomeComponent } from './home/home.component';\nimport { RoomComponent } from './room/room.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { NavtestComponent } from './navtest/navtest.component';\nimport { DepartmentComponent } from './department/department.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeService } from './employee.service';\nimport { NavigationDataService } from './navigationData.service';\nimport {PersonService} from './person.service';\nimport { CsvReadComponent } from './csv-read/csv-read.component';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'room', component: RoomComponent},\n  {path: 'contact/:email', component: ContactComponent},\n  {path: 'nav', component: NavtestComponent},\n  {path: 'department/:id', component: DepartmentComponent},\n  {path: 'serviceTest', component: EmployeeListComponent},\n  {path: 'csv', component: CsvReadComponent},\n  {path: \"**\", component: PageNotFoundComponent} // for page not found keep this as the last route\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HearderComponent,\n    HomeComponent,\n    RoomComponent,\n    ContactComponent,\n    PageNotFoundComponent,\n    NavtestComponent,\n    DepartmentComponent,\n    EmployeeListComponent,\n    CsvReadComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule, //ReactiveFormsModule for reactive form validations\n    RouterModule.forRoot(appRoutes),//for routing\n    HttpClientModule //for http\n  ],\n  providers: [EmployeeService,NavigationDataService,PersonService], // services has to be specified here\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n\\n</p>\\n<div class=\\\"container-fluid\\\">\\n<h1>Da Dili mandha poda patti..</h1>\\nemail id selected is <i><b>{{emailId}}</b></i>\\n<p>\\n</p>\\n<button class=\\\"button\\\"  (click)=\\\"sendMeHome()\\\"> Send Me Home</button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { PARAMETERS } from '@angular/core/src/util/decorators';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n public emailId: string;\n\n  constructor(private route: ActivatedRoute, private router: Router) { \n    this.route.params.subscribe(res => console.log(res.email));\n  }\n\n  ngOnInit() {\n //   let email = this.route.snapshot.params['email'];\n //   this.emailId = email;\n    this.route.paramMap.subscribe((params: ParamMap)=>{\n      let email = params.get('email');\n      this.emailId = email;\n    });\n   \n  }\n\n  sendMeHome(){\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p></p>\\n<div>\\n<h4>Select the file:</h4>\\n<input type=\\\"file\\\" class=\\\"upload\\\" (change)=\\\"changeListener($event.target.files)\\\" accept=\\\".csv\\\" >\\n<br>\\n<h5 style=\\\"color: red\\\">{{errMsg}}</h5>\\n</div>\\n<div class=\\\"container\\\">\\n      <table class=\\\"table table-bordered\\\">\\n      <tr *ngFor=\\\"let x of csvData; let i = index\\\">\\n          <span *ngIf = \\\"i==0; then condition1 else condition2\\\"></span>         \\n          <ng-template #condition1>  <th *ngFor=\\\"let y of x; let j = index\\\">\\n          <span *ngIf = \\\"j==2; then condition11 else condition22\\\"></span>         \\n          <ng-template #condition11> {{ y }}  </ng-template>\\n          <ng-template #condition22> {{ y }}</ng-template>\\n          </th>\\n           </ng-template>\\n          <ng-template #condition2> <td *ngFor=\\\"let y of x\\\">{{ y }}</td> </ng-template>\\n      </tr>\\n    </table>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Issues } from '../Issues';\n\n@Component({\n  selector: 'app-csv-read',\n  templateUrl: './csv-read.component.html',\n  styleUrls: ['./csv-read.component.css']\n})\nexport class CsvReadComponent implements OnInit {\n\n  csvData: any[] = [];\n  errMsg: String;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  public changeListener(files: FileList){\n //   console.log(files);\n    if(files && files.length > 0) {\n       let file : File = files.item(0); \n       if(file.name.endsWith(\".csv\")){\n //        console.log(file.name);\n //        console.log(file.size);\n //        console.log(file.type);\n         let reader: FileReader = new FileReader();\n         reader.readAsText(file);\n         reader.onload = (e) => {\n            let csv: string = reader.result;\n            console.log(csv);\n    let allTextLines = csv.split(/\\r\\n|\\n/);\n    let headers = allTextLines[0].split(',');\n    let lines = [];\n\n    for ( let i = 0; i < allTextLines.length; i++) {\n        let data = allTextLines[i].split(',');\n        if (data.length == headers.length) {\n            let tarr = [];\n            for ( let j = 0; j < headers.length; j++) {\n                tarr.push(data[j]);\n            }\n            lines.push(tarr);\n        }\n    }\n    this.csvData = lines;\n         }\n      }else{\n        alert('Please select a .CSV file');\n        this.csvData = [];\n        this.errMsg = \"Please choose a .CSV file\"\n      }\n    }\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  The selected department ID is <b>{{dptId}}</b><p></p>\\n  <button (click)=\\\"selectNext()\\\">Next</button>\\n  <button (click)=\\\"selectPrevious()\\\">Previous</button>\\n  <p>\\n    <button (click)=\\\"goBack()\\\">Back</button> <!--sending option parameter in routing-->\\n  </p>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.css']\n})\nexport class DepartmentComponent implements OnInit {\n\n  public dptId;\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params: ParamMap)=>{\n      let departmentId = parseInt(params.get('id'));\n      this.dptId = departmentId;\n    });\n  }\n\n  selectNext(){\n    let nextDptId = this.dptId + 1;\n    this.router.navigate(['/department',nextDptId]);\n  }\n\n  selectPrevious(){\n    let previousDptId = this.dptId - 1;\n    this.router.navigate(['/department',previousDptId]);\n  }\n\n  goBack(){\n    let selectedID = this.dptId? this.dptId : null;\n    this.router.navigate(['/nav',{id:selectedID}]); //passing optional parameter in routing. There is no need to specify :id in appModule.ts\n  }\n\n}\n","module.exports = \"table, th, td {\\r\\n    border: 1px solid black;\\r\\n }\\r\\n\\r\\n /* th, td {\\r\\n    padding: 15px;\\r\\n    text-align: left;\\r\\n} */\"","module.exports = \"<h2 style=\\\"color: red\\\">{{errorMsg}}</h2>\\n<p></p>\\n<ul *ngFor=\\\" let employee of employees\\\">\\n  <li>{{employee.id}}. <button (click)=\\\"goTo(employee)\\\">{{employee.name}}</button></li>\\n</ul>\\n<br>\\n<u>From Spring Boot app</u>\\n<ul *ngFor=\\\"let person of persons\\\">\\n  <li>{{person.firstName}}</li>\\n</ul>\\n{{persons | json}}\\n<br>\\n<table>\\n  <tr>\\n    <th>ID</th>\\n    <th>NAME</th>\\n  </tr>\\n  <tr *ngFor=\\\"let tr of treeList\\\">\\n    <td>{{tr.id}}</td> \\n    <td>\\n     <tr>\\n        \\n        <td>\\n            <tr>\\n              <td>\\n                  <div *ngIf = \\\"showHide; then condition3 else condition4\\\"></div>\\n                <ng-template #condition3>\\n                <div class=\\\"btn\\\" (click)=\\\"onClickExpand($event)\\\">-</div>\\n              </ng-template>\\n            <ng-template #condition4>\\n                <div class=\\\"btn\\\" (click)=\\\"onClickExpand($event)\\\">+</div>\\n            </ng-template>\\n              </td>\\n              <td>{{tr.name}}</td>\\n            </tr>\\n            <tr>\\n              <td></td>\\n              <td>\\n                  <div *ngIf = \\\"showHide; then condition1 else condition2\\\"></div>\\n                 \\n              <ng-template #condition1>\\n              <table>              \\n              <tr *ngFor=\\\"let addr of tr.addressList\\\">\\n              <td>{{addr.plotNumber}}</td>\\n              <td>{{addr.street}}</td>\\n              </tr>\\n              </table>\\n            </ng-template>\\n              <ng-template #condition2>\\n                  \\n              </ng-template>\\n              </td>\\n        </tr>\\n        </td>\\n    </tr>\\n    </td>\\n  </tr>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { NavigationDataService } from '../navigationData.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { IEmployeeTree } from '../employeeTree';\nimport { PersonService } from '../person.service';\nimport { IPerson } from '../person';\n\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  public persons:IPerson[] =[];\n  public showHide:boolean = false; \n  public employees =[];\n  public errorMsg:string;\n  public treeList:IEmployeeTree[]= [\n    {\"id\":1, \"name\":\"Deepak\", \"addressList\":[{\"plotNumber\":20, \"street\":\"Sannathi Street\"}]},\n    {\"id\":2, \"name\":\"Dilip\", \"addressList\":[{\"plotNumber\":20, \"street\":\"Sannathi Street\"}]},\n    {\"id\":3, \"name\":\"Raji\", \"addressList\":[{\"plotNumber\":20, \"street\":\"Sannathi Street\"}]}\n ];\n\n  constructor(private _employeeService: EmployeeService,private _navigationDataService :NavigationDataService,private router: Router, private route: ActivatedRoute\n              ,private _personService: PersonService) { }\n\n  ngOnInit() {\n   this._employeeService.getEmployees()\n        .subscribe(data => this.employees=data,\n                  error=>this.errorMsg=error);\n\n   this._personService.getAllPersons()\n        .subscribe(data => this.persons=data,\n                   error=>this.errorMsg=error);\n  }\n  goTo(employee){\n  this._navigationDataService.setNavData(employee);\n  this.router.navigate(['/room']);\n  }\n\n  onClickExpand(event){\n    \n    if(this.showHide === true){\n      this.showHide=false;\n    //  alert(\"false\");\n    }else{\n      this.showHide=true;\n     // alert(\"true\");\n    }\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { IEmployee } from './employee';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators' ;\n\n@Injectable()\nexport class EmployeeService {\n\n  private _url: string = \"/assets/data/employeeData.json\";// to get 404 error change to \"/assets/data/employeeData1.json\";\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<IEmployee[]>{ //returns Observable so specifying the type\n    return this.http.get<IEmployee[]>(this._url)\n                    .pipe(catchError(this.errorHandler)); // this.errorHandler is a method\n  }\n\n  errorHandler(error: HttpErrorResponse){\n    return throwError(error.message || \"Server Error\");\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><h2>Hotel Booking Portal</h2></a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" \\n      [routerLinkActiveOptions]=\\\"{exact: true}\\\">  <!--to make home inactive when other tab is selected-->\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">\\n          <h5>Home</h5> <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/room\\\">\\n          <h5>Room Selection</h5></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/contact/deepak\\\">\\n          <h5>Contact</h5></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/nav\\\">\\n          <h5>Nav Test</h5></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/serviceTest\\\">\\n          <h5>Service Test</h5></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" >\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/csv\\\">\\n          <h5>Read-CSV</h5></a>\\n      </li>\\n    </ul>\\n    <span class=\\\"navbar-text\\\">\\n      @Deepak Ramanan\\n    </span>\\n  </div>\\n</nav>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-hearder',\n  templateUrl: './hearder.component.html',\n  styleUrls: ['./hearder.component.css']\n})\nexport class HearderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<p></p>\\n<div class=\\\"container-fluid\\\">\\n\\n\\n    <div class=\\\"container-fluid\\\" style=\\\"text-align: center\\\">\\n        <span *ngIf = \\\"!isavailable; then condition1 else condition2\\\">\\n          \\n         </span>\\n        <h3>\\n            <ng-template #condition1><h3>Hello Guest !!</h3> </ng-template>\\n            <ng-template #condition2><h3 style=\\\" font-family: cursive; font-weight: bolder\\\"> Hi {{firstName}} {{lastName}} </h3></ng-template>\\n    \\n        <u style=\\\"font-family: cursive;\\\"> Welcome to our Hotel Booking Portal </u>\\n      \\n    </h3>\\n    <div class=\\\"btn\\\" (click)=\\\"onClickaddPerson($event)\\\"><h4>+</h4></div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n        No. of Person <span class=\\\"badge badge-light\\\">{{noOfPerson}}</span>     \\n      </button>\\n      <div class=\\\"btn\\\" (click)=\\\"onClickMinusPerson($event)\\\"><h4>-</h4></div>\\n    </div><p></p>\\n\\n\\n  <div class=\\\"row  mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First name\\\" [(ngModel)]=\\\"firstName\\\" ng-style=\\\"username\\\"\\n      required minlength=\\\"1\\\" #name=\\\"ngModel\\\"><!-- [(ngModel)]=\\\"firstName\\\"> -->\\n      <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n     class=\\\"alert alert-danger\\\">\\n\\n  <div  *ngIf=\\\"name.errors.required\\\" >\\n    Name is required.\\n  </div>\\n  <div  *ngIf=\\\"name.errors.minlength\\\">\\n    Name must be at least 4 characters long.\\n  </div>\\n    </div>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last name\\\" [(ngModel)]=\\\"lastName\\\" (change)=\\\"myChangeFunction($event)\\\">\\n    </div>\\n  </div>\\n\\n<div class=\\\"input-group mb-3\\\">\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Emai Id\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"basic-addon2\\\">\\n  <div class=\\\"input-group-append\\\">\\n    <span class=\\\"input-group-text\\\" id=\\\"basic-addon2\\\">@example.com</span>\\n  </div>\\n</div>\\n\\n<div class=\\\"input-group mb-3\\\">\\n  <div class=\\\"input-group-prepend\\\">\\n    <span class=\\\"input-group-text\\\" id=\\\"\\\">Phone No.</span>\\n  </div>\\n  <input type=\\\"text\\\" class=\\\"form-control\\\">\\n</div>\\n\\n<div class=\\\"form-group\\\">\\n  <label for=\\\"inputAddress2\\\">Address </label>\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Block, Floor, Apartment, Street..\\\">\\n</div>\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"inputCity\\\">City</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-4\\\">\\n    <label for=\\\"inputState\\\">State</label>\\n    <select id=\\\"inputState\\\" class=\\\"custom-select\\\">\\n      <option selected>Choose...</option>\\n      <option *ngFor=\\\"let st of states\\\" [value]=\\\"st\\\">{{st}}</option>\\n     \\n    </select>\\n  </div>\\n  <div class=\\\"form-group col-md-2\\\">\\n    <label for=\\\"inputZip\\\">Zip</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\">\\n  </div>\\n</div>\\n\\n\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Register</button>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  states : String[] ;\n  firstName : String;\n  lastName : String;\n  isavailable : Boolean;\n  noOfPerson : any=0;\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.states=[\n      'Andhra Pradesh',\n'Arunachal Pradesh',\n'Assam',\n'Bihar',\n'Chhattisgarh',\n'Chandigarh',\n'Dadra and Nagar Haveli',\n'Daman and Diu',\n'Delhi',\n'Goa',\n'Gujarat',\n'Haryana',\n'Himachal Pradesh',\n'Jammu and Kashmir',\n'Jharkhand',\n'Karnataka',\n'Kerala',\n'Madhya Pradesh',\n'Maharashtra',\n'Manipur',\n'Meghalaya',\n'Mizoram',\n'Nagaland',\n'Orissa',\n'Punjab',\n'Pondicherry',\n'Rajasthan',\n'Sikkim',\n'Tamil Nadu',\n'Tripura',\n'Uttar Pradesh',\n'Uttarakhand',\n'West Bengal'\n    ]\n  }\n\n  myChangeFunction(event){\n  //  alert(\"input is changed\");\n      console.log(event);\n      this.isavailable = true;\n  }\n  onClickaddPerson(event){\n  //  alert(\"input is changed\");\n      console.log(event);\n      this.noOfPerson = this.noOfPerson+1;\n  }\n  onClickMinusPerson(event){\n  //  alert(\"input is changed\");\n      console.log(event);\n      if (this.noOfPerson >0) {\n        this.noOfPerson = this.noOfPerson-1;  \n      }\n      \n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NavigationDataService {\r\n\r\n  private navData: any; // keeping data type as any so tat any value can be passed\r\n\r\n  constructor() { }\r\n\r\n  setNavData(navigationData){ \r\n    this.navData =navigationData; \r\n  }\r\n\r\n  getNavData(){\r\n      return this.navData;\r\n  }\r\n}\r\n","module.exports = \".selected{\\r\\n    font-weight: bolder;\\r\\n    background-color: blue;font-style: italic;\\r\\n    color: aliceblue;\\r\\n    \\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <ul>\\n    <li *ngFor=\\\"let dpt of departments\\\" (click)=\\\"onSelect(dpt)\\\" >\\n      {{dpt.id}} <button [class.selected]=\\\"isSelected(dpt)\\\">{{dpt.name}}</button> <!--if back button clicked then the clicked link will be highlighted-->\\n    </li>\\n  </ul>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-navtest',\n  templateUrl: './navtest.component.html',\n  styleUrls: ['./navtest.component.css']\n})\nexport class NavtestComponent implements OnInit {\n  public selectedDptId;\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    //on clicking back button in department.html we get value of params like this\n    this.route.paramMap.subscribe((params: ParamMap)=>{\n      let selectedId = parseInt(params.get('id'));\n      this.selectedDptId = selectedId;\n    });\n  }\n\n  departments= [\n    {\"id\":1, \"name\":\"Angular\"},\n    {\"id\":2, \"name\":\"Node\"},\n    {\"id\":3, \"name\":\"React\"},\n    {\"id\":4, \"name\":\"D3Js\"},\n    {\"id\":5, \"name\":\"Boot\"}\n  ];\n\n  onSelect(dpt){\n   // alert(\"id: \"+dpt.id);\n    this.router.navigate(['/department', dpt.id]);\n  }\n\n  isSelected(dpt){\n    return dpt.id === this.selectedDptId;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"align-content: center\\\">\\n\\n  <h1 style=\\\"font-family: cursive; color: rgb(205, 0, 0)\\\" >404 - Page Not Found Buddy !!</h1>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators' ;\nimport { IPerson } from './person';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n\n\n  private _url: string = \"//localhost:8888/persons/allPersons\";// to get 404 error change to \"/assets/data/employeeData1.json\";\n\n  constructor(private http: HttpClient) { }\n\n  getAllPersons(): Observable<IPerson[]>{ //returns Observable so specifying the type\n    return this.http.get<IPerson[]>(this._url)\n                    .pipe(catchError(this.errorHandler)); // this.errorHandler is a method\n  }\n\n  errorHandler(error: HttpErrorResponse){\n    return throwError(error.message || \"Server Error\");\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"width: 25%\\\">\\n    <br />\\n    <form (ngSubmit)='loginUser()' [formGroup]='loginForm' novalidate class=\\\"form\\\">\\n        <input formControlName='email' type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Email\\\" />\\n        <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"loginForm.get('email').hasError('required') && loginForm.get('email').touched\\\">\\n            Email is required\\n        </div>\\n        <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"loginForm.get('email').hasError('pattern')\\\"> <!--custom validation-->\\n            Valid Email is required\\n        </div>\\n        \\n        <input formControlName='password' type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\" />\\n        <div class=\\\"alert  alert-danger\\\" *ngIf=\\\" !loginForm.get('password').valid && loginForm.get('email').touched\\\">\\n            Password is required and should less than 6 characters\\n        </div>\\n\\n        <input formControlName='age' type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Age\\\" />\\n        <div class=\\\"alert  alert-danger\\\" *ngIf=\\\"loginForm.get('age').dirty && loginForm.get('age').errors && loginForm.get('age').errors.ageRange \\\">\\n        Age should be in between 18 to 45 years\\n        </div>\\n        <button [disabled]='loginForm.invalid' class=\\\"btn btn-default\\\">Login</button>\\n    </form>\\n</div>\\n<p></p>\\n<b><u>Navigated from Service Test and passing data via Service</u></b> <i> navigatinDataService</i> <br>\\n\\nThe id is <b>{{employee.id}}</b> and the name is <b>{{employee.name}}</b>.\"","import { Component, OnInit, Output, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NavigationDataService } from '../navigationData.service';\nimport { IEmployee } from '../employee';\n\n@Component({\n  selector: 'app-room',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent implements OnInit {\n\n  loginForm: FormGroup;\n  emailPattern = \"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,64}\";//email regex\n  employee: IEmployee;\n\n  constructor(private router: Router, private route: ActivatedRoute, private _navigationDataService :NavigationDataService) { } //injecting for routing\n\n  ngOnInit() {\n\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.pattern(this.emailPattern)]),\n      password: new FormControl(null, [Validators.required, Validators.maxLength(6)]),\n      age: new FormControl(null, [ageRangeValidator])  // custom validator\n  });\n\n  function ageRangeValidator(control: AbstractControl): { [key: string]: boolean } | null {\n \n    if (control.value !== undefined && (isNaN(control.value) || control.value < 18 || control.value > 45)) {\n        return { 'ageRange': true };\n    }\n    return null;\n}\n\n    this.employee = this._navigationDataService.getNavData(); //getting data from service in routing \n\n  }\n\n  loginUser() {\n    console.log(this.loginForm.status);\n    console.log(this.loginForm.value);\n    console.log(this.loginForm.value.email);\n    console.log(this.loginForm.value.age);\n\n      this.router.navigate(['/contact', this.loginForm.value.email]); //for navigating to other page\n   //  this.router.navigate([this.loginForm.value.email], {relativeTo: this.route});//-->relativeTo gives upto http://localhost:4200/room\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}